version: "3"

networks:
  # 网络名称
  app_network:
    driver: bridge

services:
  nginx:
    container_name: nacos-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
#      - "7848:7848"
      - "8848:8848"
      - "9848:9848"
#      - "9849:9849"
    env_file:
      - ./env/nginx.env
    restart: always
    networks:
      - app_network
    depends_on:
      nacos1:
        condition: service_healthy
      nacos2:
        condition: service_healthy
      nacos3:
        condition: service_healthy

  nacos1:
    hostname: nacos1
    container_name: nacos1
    build:
      context: ./nacos
      dockerfile: Dockerfile
    volumes:
      - /docker-data/nacos-cluster/nacos1/logs/:/home/nacos/logs/
    #    ports:
    #      - "7848:7848"
    #      - "8848:8848"
    #      - "9848:9848"
    #      - "9849:9849"
    env_file:
      - ./env/nacos-hostname.env
    restart: always
    networks:
      - app_network
    # 依赖mysql
    depends_on:
      mysql:
        # mysql健康检查
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/readiness"]
      interval: 10s
      timeout: 5s
      retries: 5

  nacos2:
    hostname: nacos2
    container_name: nacos2
    build:
      context: ./nacos
      dockerfile: Dockerfile
    volumes:
      - /docker-data/nacos-cluster/nacos2/logs/:/home/nacos/logs/
    env_file:
      - ./env/nacos-hostname.env
    restart: always
    networks:
      - app_network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/readiness"]
      interval: 10s
      timeout: 5s
      retries: 5

  nacos3:
    hostname: nacos3
    container_name: nacos3
    build:
      context: ./nacos
      dockerfile: Dockerfile
    volumes:
      - /docker-data/nacos-cluster/nacos3/logs/:/home/nacos/logs/
    env_file:
      - ./env/nacos-hostname.env
    restart: always
    networks:
      - app_network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/v1/console/health/readiness"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    container_name: nacos-mysql
    build:
      context: ./mysql/8
      dockerfile: Dockerfile
    env_file:
      - ./env/mysql.env
    volumes:
      - /docker-data/nacos-cluster/mysql:/var/lib/mysql
    #    ports:
    #      - "3306:3306"
    restart: always
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10